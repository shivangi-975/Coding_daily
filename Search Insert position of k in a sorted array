// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
//User function Template for C++

class Solution{
    public:
    int searchInsertK(vector<int>Arr, int N, int k)
    {
        // code here
          for(int i=0;i<N;i++)
          {
              if(Arr[i]==k)
              {
                  return i;
              }
              else if(Arr[i]>k)
              {
                  return i;
              }
             
          }
          return N;
          }
};

===============================================================================================================

O(logN) solution:

// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
//User function Template for C++

class Solution{
    public:
    int searchInsertK(vector<int>Arr, int N, int k)
    {
        // code here
        int start=0;
        int end=N-1;
        while(start<=end)
        {
            int mid=(start+end)/2;
            if(Arr[mid]==k)
            {
                return mid;
            }
            else if(Arr[mid]<k)
            {
                start=mid+1;
            }
            else
            {
                end=mid-1;
            }
        }
        return end+1;
    }
};

